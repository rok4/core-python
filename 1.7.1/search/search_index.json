{"config":{"lang":["fr"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Librairies ROK4 Python","text":"<p>Ces librairies facilitent la manipulation d'entit\u00e9s du projet ROK4 comme les Tile Matrix Sets, les pyramides ou encore les couches, ainsi que la manipulation des stockages associ\u00e9s.</p>"},{"location":"#installer-la-librairie","title":"Installer la librairie","text":"<p>Installations syst\u00e8me requises :</p> <ul> <li>debian : <code>apt install python3-rados python3-gdal</code></li> </ul> <p>Depuis PyPI : <code>pip install rok4</code></p> <p>Depuis GitHub : <code>pip install https://github.com/rok4/core-python/releases/download/1.7.1/rok4-1.7.1-py3-none-any.whl</code></p> <p>L'environnement d'ex\u00e9cution doit avoir acc\u00e8s aux librairies syst\u00e8me. Dans le cas d'une utilisation au sein d'un environnement python, pr\u00e9cisez bien \u00e0 la cr\u00e9ation <code>python3 -m venv --system-site-packages .venv</code>.</p>"},{"location":"#utiliser-la-librairie","title":"Utiliser la librairie","text":"<pre><code>from rok4.TileMatrixSet import TileMatrixSet\n\ntry:\n    tms = TileMatrixSet(\"file:///path/to/tms.json\")\nexcept Exception as exc:\n    print(exc)\n</code></pre> <p>Plus d'exemple dans la documentation d\u00e9veloppeur.</p>"},{"location":"#contribuer","title":"Contribuer","text":"<ul> <li> <p>Installer les d\u00e9pendances de d\u00e9veloppement :</p> <p><code>sh python3 -m pip install -e[dev]</code></p> </li> <li> <p>Consulter les directives de contribution</p> </li> </ul>"},{"location":"#compiler-la-librairie","title":"Compiler la librairie","text":"<pre><code>apt install python3-venv python3-rados python3-gdal\npython3 -m venv .venv\nsource .venv/bin/activate\npython3 -m pip install --upgrade build bump2version\nbump2version --allow-dirty --current-version 0.0.0 --new-version 1.7.1 patch pyproject.toml src/rok4/__init__.py\n\n# Run unit tests\npython3 -m pip install -e .[test]\n# To use system installed modules rados and osgeo\necho \"/usr/lib/python3/dist-packages/\" &gt;.venv/lib/python3.10/site-packages/system.pth\npython3 -c 'import sys; print (sys.path)'\n# Run tests\ncoverage run -m pytest\n# Get tests report and generate site\ncoverage report -m\ncoverage html -d dist/tests/\n\n# Build documentation\npython3 -m pip install -e .[doc]\npdoc3 --html --output-dir dist/ rok4\n\n# Build artefacts\npython3 -m build\n</code></pre> <p>Remarque :</p> <p>Lors de l'installation du paquet apt <code>python3-gdal</code>, une d\u00e9pendance, peut demander des interactions de configuration. Pour installer dans un environnement non-interactif, d\u00e9finir la variable shell <code>DEBIAN_FRONTEND=noninteractive</code> permet d'adopter une configuration par d\u00e9faut.</p>"},{"location":"#publier-la-librairie-sur-pypi","title":"Publier la librairie sur Pypi","text":"<p>Configurer le fichier <code>$HOME/.pypirc</code> avec les acc\u00e8s \u00e0 votre compte PyPI.</p> <pre><code>python3 -m pip install --upgrade twine\npython3 -m twine upload --repository pypi dist/rok4-1.7.1-py3-none-any.whl dist/rok4-1.7.1.tar.gz\n</code></pre>"},{"location":"changelog/","title":"Historique des versions","text":""},{"location":"changelog/#171","title":"1.7.1","text":""},{"location":"changelog/#added","title":"[Added]","text":"<ul> <li> <p>Raster</p> <ul> <li>Classe RasterSet, r\u00e9pr\u00e9sentant une collection d'objets de la classe Raster, avec des informations suppl\u00e9mentaires</li> <li>M\u00e9thodes d'import et export des informations extraites par une instance RasterSet, au travers d'un descripteur (fichier ou objet json, voire sortie standard)</li> <li>Documentation interne</li> <li>Tests unitaires pour la classe RasterSet</li> <li>Classe Raster : constructeur \u00e0 partir des param\u00e8tres</li> </ul> </li> <li> <p>Pyramid</p> <ul> <li>Fonction de calcul de la taille d'une pyramide</li> <li>G\u00e9n\u00e9rateur de lecture de la liste du contenu</li> </ul> </li> <li> <p>Storage</p> <ul> <li>Fonction de calcul de la taille des fichiers d'un chemin selon le stockage</li> <li>Ajout de la copie de HTTP vers FILE/S3/CEPH</li> <li>Ajout de la fonction de lecture d'un fichier HTTP, de l'existence d'un fichier HTTP et du calcul de taille d'un fichier HTTP</li> </ul> </li> </ul>"},{"location":"changelog/#changed","title":"[Changed]","text":"<ul> <li>Raster<ul> <li>Homog\u00e9n\u00e9isation du code</li> <li>Mise en conformit\u00e9 PEP-8</li> </ul> </li> <li>test_Raster<ul> <li>Homog\u00e9n\u00e9isation du code</li> <li>Mise en conformit\u00e9 PEP-8</li> </ul> </li> <li>Utils<ul> <li>Mise en conformit\u00e9 PEP-8 des fonctions <code>compute_bbox</code> et <code>compute_format</code></li> </ul> </li> </ul>"},{"location":"changelog/#fixed","title":"[Fixed]","text":"<ul> <li>Utils<ul> <li>Correction d'un nom de variable dans la fonction <code>compute_format</code>, qui \u00e9crasait une fonction du noyau python.</li> </ul> </li> </ul>"},{"location":"changelog/#160","title":"1.6.0","text":"<p>Lecture par syst\u00e8me de fichier virtuel avec GDAL</p>"},{"location":"changelog/#added_1","title":"[Added]","text":"<ul> <li>Storage<ul> <li>Fonction <code>get_osgeo_path</code> permettant de configurer le bon syt\u00e8me de fichier virtuel en fonction du chemin fourni, et retourne celui \u00e0 utiliser dans le Open de gdal ou ogr</li> </ul> </li> </ul>"},{"location":"changelog/#changed_1","title":"[Changed]","text":"<ul> <li>Storage<ul> <li>la r\u00e9cup\u00e9ration d'un client S3 (<code>__get_s3_client</code>) permet de r\u00e9cup\u00e9rer le client, l'h\u00f4te, les cl\u00e9s d'acc\u00e8s et secr\u00e8te, ainsi que le nom du bucket sans l'\u00e9ventuel h\u00f4te du cluster</li> </ul> </li> </ul>"},{"location":"changelog/#fixed_1","title":"[Fixed]","text":"<ul> <li>Storage<ul> <li>Lecture binaire S3 : mauvaise configuration du nom du bucket et de l'objet et mauvaise lecture partielle</li> </ul> </li> </ul>"},{"location":"changelog/#removed","title":"[Removed]","text":"<ul> <li>Exceptions<ul> <li><code>NotImplementedError</code> est une exceptions native</li> </ul> </li> </ul>"},{"location":"changelog/#150","title":"1.5.0","text":""},{"location":"changelog/#added_2","title":"[Added]","text":"<ul> <li>Level<ul> <li>Fonction de test d'une tuile <code>is_in_limits</code> : ses indices sont ils dans les limites du niveau ?</li> </ul> </li> <li>Pyramid<ul> <li>La lecture d'une tuile v\u00e9rifie avant que les indices sont bien dans les limites du niveau</li> <li>Les exceptions lev\u00e9es lors du d\u00e9codage de la tuile raster emettent une exception <code>FormatError</code></li> <li><code>get_tile_indices</code> accepte en entr\u00e9e un syst\u00e8me de coordonn\u00e9es : c'est celui des coordonn\u00e9es fournies et permet de faire une reprojection si celui ci n'est pas le m\u00eame que celui des donn\u00e9es dans la pyramide</li> </ul> </li> <li>Utils<ul> <li>Meilleure gestion de reprojection par <code>reproject_bbox</code> : on d\u00e9tecte des syst\u00e8mes identiques en entr\u00e9e ou quand seul l'ordre des axes changent, pour \u00e9viter le calcul</li> <li>Ajout de la fonction de reprojection d'un point <code>reproject_point</code> : on d\u00e9tecte des syst\u00e8mes identiques en entr\u00e9e ou quand seul l'ordre des axes changent, pour \u00e9viter le calcul</li> </ul> </li> </ul>"},{"location":"changelog/#changed_2","title":"[Changed]","text":"<ul> <li>Utils :<ul> <li><code>bbox_to_geometry</code> : on ne fournit plus de syst\u00e8me de coordonn\u00e9es, la fonction se content de cr\u00e9er la g\u00e9om\u00e9trie OGR \u00e0 partir de la bbox, avec \u00e9ventuellement une densification en points des bords</li> </ul> </li> <li>Pyramid :<ul> <li>Renommage de fonction : <code>update_limits</code> -&gt; <code>set_limits_from_bbox</code>. Le but est d'\u00eatre plus explicite sur le fonctionnement de la fonction (on \u00e9crase les limites, on ne les met pas juste \u00e0 jour par union avec la bbox fournie)</li> </ul> </li> </ul>"},{"location":"changelog/#144","title":"1.4.4","text":"<p>Ajout de fonctionnalit\u00e9s de lecture de donn\u00e9e d'une pyramide et suivi des recommandations PyPA pour la gestion du projet.</p>"},{"location":"changelog/#added_3","title":"[Added]","text":"<ul> <li>TileMatrix :<ul> <li>Fonction de calcul des indices de tuile et de pixel dans la tuile \u00e0 partir d'un point dans le syst\u00e8me de coordonn\u00e9es du TMS</li> </ul> </li> <li>Pyramid :<ul> <li>Fonction de calcul des indices de tuile et de pixel dans la tuile \u00e0 partir d'un point dans le syst\u00e8me de coordonn\u00e9es du TMS et \u00e9ventuellement un niveau</li> <li>Fonctions de lecture d'une tuile : au format binaire source ou au format tableau \u00e0 3 dimensions pour les tuiles raster</li> </ul> </li> <li>Storage :<ul> <li>Fonction de lecture binaire, compl\u00e8te ou partielle, d'un fichier ou objet S3 ou CEPH</li> </ul> </li> <li> <p>Exceptions : NotImplementedError permet de pr\u00e9ciser qu'une fonctionnalit\u00e9 n'a pas \u00e9t\u00e9 impl\u00e9ment\u00e9e pour tous les cas. Ici, on ne g\u00e8re pas la d\u00e9compression des donn\u00e9es raster pour les compressions packbit et LZW</p> </li> <li> <p>Ajout de la publication PyPI dans la CI GitHub </p> </li> </ul>"},{"location":"changelog/#changed_3","title":"[Changed]","text":"<ul> <li>Storage :<ul> <li>La lecture sous forme de cha\u00eene s'appuie sur la lecture compl\u00e8te binaire. Aucun changement \u00e0 l'usage.</li> </ul> </li> <li> <p>TileMatrixSet : quelque soit le syst\u00e8me de coordonn\u00e9es, on ne g\u00e8re que un ordre des axes X,Y ou Lon,Lat. Cependant, les fonctions de calcul de ou \u00e0 partir de bbox respectent l'ordre du syst\u00e8me dans ces derni\u00e8res.</p> </li> <li> <p>Passage de la configuration du projet dans le fichier <code>pyproject.toml</code></p> </li> </ul>"},{"location":"changelog/#130","title":"1.3.0","text":"<p>Ajout de la librairie de lecture de donn\u00e9es vecteur, de tests unitaires et ajout de fonctionnalit\u00e9 pour le stockage. Am\u00e9lioration de la gestion du projet et de l'int\u00e9gration continue.</p>"},{"location":"changelog/#added_4","title":"[Added]","text":"<ul> <li>Librairie de lecture de donn\u00e9es vecteur :</li> <li>Chargement de donn\u00e9es vecteur pour des fichiers shapefile, Geopackage, CSV et GeoJSON</li> <li>Ecriture des tests unitaires</li> <li>Librairie Pyramid : compl\u00e9tion des tests unitaires</li> <li>Librairie Storage : prise en charge de la copie CEPH -&gt; S3</li> <li>Gestion du projet (compilations, d\u00e9pendances...) via poetry</li> <li>Injection de la version dans le fichier <code>pyproject.toml</code> et <code>__init__.py</code> (d\u00e9finition de la variable <code>__version__</code>)</li> <li>\u00c9volution de la CI github<ul> <li>V\u00e9rification des installations et tests unitaires sous ubuntu 20.04 python 3.8 et ubuntu 22.04 python 3.10</li> <li>Publication de l'artefact avec les r\u00e9sultats des tests unitaires</li> <li>Nettoyage de la release en cas d'erreur</li> <li>Compilation de la documentation et publication sur la branche gh-pages</li> </ul> </li> </ul>"},{"location":"changelog/#120","title":"1.2.0","text":"<p>Ajout des librairies pour l'utilitaire make-layer.py</p>"},{"location":"changelog/#added_5","title":"[Added]","text":"<ul> <li> <p>Librairie Storage : compl\u00e9tion des tests unitaires</p> </li> <li> <p>Librairie Pyramid :</p> </li> <li> <p>Ajout de getter sur les niveaux du haut et du bas</p> </li> <li> <p>Ajout de la librairie de gestion d'une couche Layer :</p> </li> <li>Chargement d'une couche depuis des param\u00e8tres</li> <li>Chargement d'une couche depuis un descripteur</li> <li>\u00c9criture du descripteur au format attendu par le serveur</li> <li> <p>\u00c9criture des tests unitaires</p> </li> <li> <p>Ajout d'une librairie d'utilitaires Utils</p> </li> <li>Conversion d'un SRS en objet OSR SpatialReference</li> <li>Conversion d'une bbox en objet OGR Geometry</li> <li>Reprojection d'une bbox avec densification des c\u00f4t\u00e9s et reprojection partielle</li> <li> <p>\u00c9criture des tests unitaires</p> </li> <li> <p>Configuration de l'outil coverage pour voir la couverture des tests unitaires</p> </li> </ul>"},{"location":"changelog/#110","title":"1.1.0","text":"<p>Prise en charge de plusieurs clusters S3 de stockage.</p>"},{"location":"changelog/#added_6","title":"[Added]","text":"<ul> <li>Librairie d'abstraction du stockage :</li> <li>Prise en charge de plusieurs clusters S3. Les variables d'environnement pour le stockage S3 pr\u00e9cisent plusieurs valeurs s\u00e9par\u00e9es par des virgules, et les noms des buckets peuvent \u00eatre suffix\u00e9s par \"@{S3 cluster host}\". Par d\u00e9faut, le premier cluster d\u00e9fini est utilis\u00e9. L'h\u00f4te du cluster n'est jamais \u00e9crit dans le descripteur de pyramide ou le fichier liste (puisque stock\u00e9s sur le cluster, on sait sur lequel sont les objets). Les objets symboliques ne le pr\u00e9cisent pas non plus et ne peuvent \u00eatre qu'au sein d'un cluster S3</li> </ul>"},{"location":"changelog/#100","title":"1.0.0","text":"<p>Initialisation des librairies Python utilis\u00e9es par les outils python \u00e0 venir du d\u00e9p\u00f4t pytools.</p>"},{"location":"changelog/#added_7","title":"[Added]","text":"<ul> <li>Librairie d'abstraction du stockage (S3, CEPH ou FILE)</li> <li>r\u00e9cup\u00e9ration du contenu sous forme de string</li> <li>\u00e9criture d'un contenu string</li> <li>cr\u00e9ation d'un lien symbolique</li> <li>copie fichier/objet &lt;-&gt; fichier/objet</li> <li>Librairie de chargement d'un Tile Matrix Set</li> <li>Librairie de gestion d'un descripteur de pyramide</li> <li>chargement depuis un descripteur ou par clone (avec changement de stockage)</li> <li>\u00e9criture du descripteur</li> <li>Tests unitaires couvrant ces librairies</li> </ul>"},{"location":"documentation/","title":"Documentation d\u00e9veloppeur","text":""},{"location":"unit-tests/","title":"Rapport des tests unitaires","text":""}]}